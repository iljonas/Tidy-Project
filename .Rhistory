rowIndex <- 18:23
colIndex <- 7:15
q3 <- read.xlsx("C:\\Users\\Isaac\\Documents\\Coursera Files\\downloadedfile2.xlsx", sheetIndex = 1, header = TRUE, colIndex = colIndex, rowIndex = rowIndex)
head(q3)
sum(q3$Zip*q3$Ext,na.rm=T)
q1$FES
q1
q1 <- read.csv("C:\\Users\\Isaac\\Documents\\Coursera Files\\downloadedfile.csv", header=TRUE)
q1$FES
R.home()
install.packages('RMySQL',type='source')
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", key = "d7e378c8d95aa59ac369",secret = "fea09dfe39dd03bd3fadfcc17f5eed2b7a5930a5")
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
req2 <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req2)
library(XML)
tree <- htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", InternalNodes = T)
tree <- htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", use InternalNodes = T)
tree <- htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", useInternalNodes = T)
tree[[1]]
tree[1]
library(httr)
GET("http://biostat.jhsph.edu/~jleek/contact.html")
oget <- GET("http://biostat.jhsph.edu/~jleek/contact.html")
ocont <- content(oget, as="text")
ocont[1]
ocont[1,1]
ocont[2]
ocont[3]
oparse <- htmlParse(ocont, asText = TRUE)
oparse[1]
oparse
oparse[[1]]
xpathSApply(oparse, fun = nchar)
xpathSApply(oparse, "/html", fun = nchar)
xpathSApply(oparse, "/html", xmlValue)
htmlx <- htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html", useInternalNodes = T)
xpathSApply(html, "/html", xmlValue)
xpathSApply(htmlx, xmlValue)
xpathSApply(htmlx, "/html", xmlValue)
xpathSApply(htmlx, "/", xmlValue)
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlcode <- readlines(con)
htmlcode <- readLines(con)
htmlcode[1]
htmlcode[2]
htmlcode[3]
bullshit <- htmlcode[c(10,20,30,100)]
bullshit
nchar(bullshit)
close(con)
con2 <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
forCode <- readLines(con2)
forCode[1]
head(forCode[,4])
head(forCode)
table1 <- read.table(con2,skip=3,sep=" ")
table1 <- read.table(con2,skip=4,sep=" ")
table1 <- read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",skip=4,sep=" ")
table1 <- read.fwf(con2, skip = 4, widths = c(-1, 9, -5, 4, 4, -5, 4, 4, -5, 4, 4, -5, 4, 4))
table1 <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", skip = 4, widths = c(-1, 9, -5, 4, 4, -5, 4, 4, -5, 4, 4, -5, 4, 4))
table1
as.numeric(table1[,4])
sum(as.numeric(table1[,4]))
fileURL <- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileURL, destfile="C://Users//Isaac//Documents//Coursera Files//restaurants.csv",method="curl")
download.file(fileURL, destfile="C://Users//Isaac//Documents//Coursera Files//restaurants.csv")
restData <- read.csv(destfile)
restData <- read.csv("C://Users//Isaac//Documents//Coursera Files//restaurants.csv")
head(restData, n=3)
table(restData$councilDistrict,restData$zipCode)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "C://Users//Isaac//Documents//Coursera Files//week3.csv")
w3 <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "C://Users//Isaac//Documents//Coursera Files//week3.csv")
w3 <- read.csv("C://Users//Isaac//Documents//Coursera Files//week3.csv")
head(w3)
agricultureLogical <- w3$ACR == 3 & w3$AGS == 6
head(w3[which(agricultureLogical),])
head(w3[which(agricultureLogical),], n=3)
library(jpeg)
library('jpeg')
install.packages('jpeg')
library(jped)
library(jpeg)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile = "C://Users//Isaac//Documents//Coursera Files//week3.jpg")
img <- readjPEG("C://Users//Isaac//Documents//Coursera Files//week3.jpg", native = TRUE)
img <- readJPEG("C://Users//Isaac//Documents//Coursera Files//week3.jpg", native = TRUE)
img
quantile(img,probs=c(.3,.8))
str(img)
summary(img)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile = "C://Users//Isaac//Documents//Coursera Files//week3.jpeg")
img <- readJPEG("C://Users//Isaac//Documents//Coursera Files//week3.jpeg", native = TRUE)
quantile(img,probs=c(.3,.8))
quantile(img
)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile = "C://Users//Isaac//Documents//Coursera Files//week3.jpeg",mode="wb")
img <- readJPEG("C://Users//Isaac//Documents//Coursera Files//week3.jpeg", native = TRUE)
quantile(img,probs=c(.3,.8))
curl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
eurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(curl,destfile = "C://Users//Isaac//Documents//Coursera Files//c_w3.csv")
download.file(eurl,destfile = "C://Users//Isaac//Documents//Coursera Files//e_w3.csv")
c_w3 <- read.csv("C://Users//Isaac//Documents//Coursera Files//c_w3.csv")
e_w3 <- read.csv("C://Users//Isaac//Documents//Coursera Files//e_w3.csv")
head(c_w3)
head(e_w3)
c_w3 <- read.csv("C://Users//Isaac//Documents//Coursera Files//c_w3.csv",skip = 3)
head(c_w3)
w3 <- merge(c_w3,e_w3, by.x='X', by.y = 'CountryCode')
head(w3)
nrow(w3)
w3[13,1]
head(w3[order(w3$Ranking),1],n=13)
w3[order(w3$Ranking),]
w3[order(-Ranking,),]
w3[order(-Ranking),]
w3[order(w3$Ranking),]
w3[order(w3$Ranking, na.last = TRUE),]
head(w3$Ranking)
w3[w3$Ranking == '', c(1,2)]
w3[w3$Ranking != '', c(1,2)]
country_rank <- w3[w3$Ranking != '', c(1,2)]
country_rank[order(country_rank$Ranking),]
country_rank[order(as.integer(country_rank$Ranking)),]
country_rank$Ranking_num <- as.numeric(country_rank$Ranking)
country_rank
country_rank$Ranking_num <- as.numeric(country_rank[,country_rank$Ranking])
country_rank$Ranking_num <- as.numeric(country_rank[,country_rank$Ranking]))
country_rank[order(as.numeric(country_rank$Ranking)),]
country_rank$Ranking_num <- as.numeric(country_rank$Ranking)
country_rank
transform(country_rank, Ranking = as.numeric(Ranking))
country_rank[order(country_rank$Ranking),]
country_rank[order(transform(country_rank, Ranking = as.numeric(Ranking))),]
country_rank[order(transform(country_rank, country_rank$Ranking = as.numeric(country_rank$Ranking))),]
country_rank[13,]
country_rank[country_rank$Ranking == 13,]
nrow(country_rank)
w3
w3_2 <- w3[which(w3$Ranking != ''),]
tapply(w3_2$Ranking, w3_2$Income.Group, FUN = mean)
tapply(w3_2$Ranking, factor(w3_2$Income.Group), FUN = mean)
tapply(as.numeric(w3_2$Ranking), w3_2$Income.Group, FUN = mean)
table(cut(w3_2$Income.Group,breaks=mean(w3_2$Ranking)))
table(cut(w3_2$Income.Group,breaks=mean(as.numeric(w3_2$Ranking))))
w3_2$Ranking <- as.numeric(as.character(w3_2$Ranking))
table(cut(w3_2$Income.Group,breaks=mean(w3_2$Ranking)))
w3_2$Ranking <- as.numeric(w3_2$Ranking)
table(cut(w3_2$Income.Group,breaks=mean(w3_2$Ranking)))
w3_2[,2] <- sapply(w3_2[,2], as.numeric)
table(cut(w3_2$Income.Group,breaks=mean(w3_2$Ranking)))
type(w3_2$Ranking)
str(w3_2$Ranking)
table(cut(factor(w3_2$Income.Group),breaks=mean(w3_2$Ranking)))
tapply(w3_2$Ranking, factor(w3_2$Income.Group), FUN = mean)
w3_tables <- cut(w3_2$Income.Group,breaks=quantile(w3_2$Ranking))
class(w3_2$Ranking)
w3_tables <- cut(as.factor(w3_2$Income.Group),breaks=quantile(w3_2$Ranking))
w3_tables <- cut(factor(w3_2$Income.Group),breaks=quantile(w3_2$Ranking))
w3_tables <- cut(factor(w3_2$Ranking,breaks=quantile(w3_2$Ranking))
)
w3_tables <- cut(w3_2$Ranking,breaks=quantile(w3_2$Ranking))
w3_tables
ftable(w3_tables)
w3_tables <- cut(as.numeric(factor(w3_2$Ranking)),breaks=quantile(w3_2$Ranking))
w3_tables
ftable(w3_tables)
w3_tables <- cut(as.numeric(factor(w3_2$Income.Group)),breaks=quantile(w3_2$Ranking))
ftable(w3_tables)
w3_tables
w3_tables <- cut(as.numeric(as.factor(w3_2$Income.Group)),breaks=quantile(w3_2$Ranking))
w3_tables
w3_tables <- cut(factor(w3_2$Income.Group),breaks=quantile(w3_2$Ranking))
w3_rank <- cut(w3_2$Ranking,breaks=quantile(w3_2$Ranking))
w3_rank
table(w3_rank, w3_2$Income.Group)
w3_rank <- cut(w3_2$Ranking,breaks=quantile(w3_2$Ranking, probs = c(0,.25,.5,.75,1)))
table(w3_rank, w3_2$Income.Group)
w3_rank <- cut(w3_2$Ranking,breaks=quantile(w3_2$Ranking, probs = seq(0,1,length=5)))
w3_rank
w3_rank <- cut(w3_2$Ranking,breaks=quantile(w3_2$Ranking, probs = c(0.2,0.4,0.6,0.8,1.0)))
table(w3_rank, w3_2$Income.Group)
w3_rank
w3_rank <- cut(w3_2$Ranking,breaks=quantile(w3_2$Ranking, probs = c(0.1,0.2,0.3,0.4,0.6,0.8,1.0)))
w3_rank
table(w3_rank, w3_2$Income.Group)
w3_rank <- cut(w3_2$Ranking,breaks=quantile(w3_2$Ranking, probs = c(0,0.2,0.3,0.4,0.6,0.8,1.0)))
table(w3_rank, w3_2$Income.Group)
w3_rank <- cut(w3_2$Ranking,breaks=quantile(w3_2$Ranking, probs = c(0.0,0.2,0.4,0.6,0.8,1.0)))
table(w3_rank, w3_2$Income.Group)
nrow(w3_2)
nrow(w3)
nrow(c_w3)
nrow(e_w3)
country_rank[order(Ranking, decreasing = TRUE),]
country_rank[order(country_rank$Ranking, decreasing = TRUE),]
class(country_rank$Ranking)
w3_2[order(w3_2$Ranking,decreasing = TRUE),]
library(swirl)
swirl()
swirl()
swirl::install_course("Getting and Cleaning Data")
swirl()
install.packages("dplyr")
install.packages("bindr")
install.packages("bindrcpp")
swirl()
install.packages("yaml_2.1.14.tar.gz", repos = NULL)
require(devtools)
install_version("yaml", version = "2.1.14", repos = "http://cran.us.r-project.org")
remove.packages("yaml")
install.packages("devtools")
library(devtools)
install_version("yaml", version="2.1.16")
swirl()
remove.packages("yam1")
remove.packages("yaml")
install.packages("Rtools")
remove.packages("Rtools")
has_devel()
install_version("yaml", version="2.1.16")
swirl()
remove.packages("yaml")
install.packages("devtools")
library(devtools)
has_devel()
remove.packages("devtools")
install.packages("devtools")
install.packages("devtools")
library(devtools)
has_devel()
library(devtools)
has_devel(
)
install_version("yaml", version="2.1.16")
sessionInfo()
library(yaml)
sessionInfo()
library(swirl)
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
package_version("dplyr")
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, -(r_arch:country))
select(cran, country:r_arch))
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country IN ("India"))
filter(cran, r_version <= "3.0.2", country %in% ("India"))
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran, ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran, country, desc(r_version), ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_gb / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size - 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(cran, mean(size))
summarize(cran, by_package, mean(size))
summarize(cran, by_package = mean(size))
summarize(by_package, mean(size))
?n
?n_distinct
submit()
pack_sum
summarize(by_package, quartile(pack_sum$count, probs = 0.99))
summarize(by_package, quantile(pack_sum$count, probs = 0.99))
summarize(pack_sum, quantile(pack_sum$count, probs = 0.99))
quartile(pack_sum$count, probs = 0.99)
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
gather(students2, sex_class, count, -grade)
res <- gather(students2, sex_class, count, -grade)
res
separate()
?separate
separate(res, sex_class, c("sex","class"))
submit()
students3
submit()
?spread
submit()
libarary(readr)
library(readr)
parse_number("class5")
submit()
submit()
students4
submit
submit()
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
?bind_rows
bind_rows(passed, failed)
sat
?select
submit()
submit()
library(swirl)
swirl()
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 19, minutes = 19, seconds = 15)
this_moment
now(tz="America/New_York")
nyc <- now(tz="America/New_York")
nyc
depart <- nyc + days(2)
depart
update(depart, hours = 17, minutes = 34)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(last_time, end = arrive)
as.period(how_long)
stopwatch()
stopwatch()
stopwatch()
libarary(dplyr)
library(dplyr)
q1_link <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file(q1_link, destfile = "C://Users//Isaac//Documents//Coursera Files//w4q1.csv")
download.file(q1_link, destfile = "C://Users//Isaac//Documents//Coursera Files//w4q1.csv", method = "curl")
q1_link <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(q1_link, destfile = "C://Users//Isaac//Documents//Coursera Files//w4q1.csv")
q1CSV <- read.csv("C://Users//Isaac//Documents//Coursera Files//w4q1.csv")
head(q1CSV)
q1Tibble <- tbl_df(q1CSV)
q1Tibble
q1Split <- strsplit(names(q1Tibble), "wgtp")
q1Split
q1Split[[123]]
q2URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(q2URL, destfile = "C://Users//Isaac//Documents//Coursera Files//w4q2.csv")
q2csv <- read.csv("C://Users//Isaac//Documents//Coursera Files//w4q2.csv")
q2Tibble <- tbl_df(q2csv)
q2Tibble
q2csv <- read.csv("C://Users//Isaac//Documents//Coursera Files//w4q2.csv", skip = 4)
q2Tibble <- tbl_df(q2csv)
q2Tibble
q2Tibble$X.3 <- gsub(",","",q2Tibble$X.3)
q2Tibble
q2Tibble <- tbl_df(q2csv)
q2Tibble$X.4 <- gsub(",","",q2Tibble$X.4)
q2Tibble
q2Tibble <- mutate(q2Tibble, X.4 = as.numeric(X.4))
q2Tibble
q2Tibble <- mutate(q2Tibble, X.4 = as.integer(X.4))
q2Tibble
summarize(q2Tibble, mean(X.4))
summarize(q2Tibble, mean(X.4), rm.na = TRUE)
?summarize
summarize(q2Tibble, avg_gdp=mean(X.4), na.rm = TRUE)
summarize(q2Tibble, avg_gdp=mean(X.4, na.rm = TRUE))
summarize(filter(q2Tibble, !is.na(X.1)), avg_gdp=mean(X.4, na.rm = TRUE))
View(q2Tibble)
filter(q2Tibble, X.1 == "")
summarize(filter(q2Tibble, X.1 != ""), avg_gdp=mean(X.4, na.rm = TRUE))
grep("^United", X.3), 3
grep("^United", X.3)
grep("^United", q2Tibble$X.3)
grep("^United", q2Tibble$X.3),3
q4URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(q4URL, destfile = "C://Users//Isaac//Documents//Coursera Files\\w4q4.csv")
q4csv <- read.csv("C://Users//Isaac//Documents//Coursera Files\\w4q4.csv")
q4Tibble <- tbl_df(q4csv)
q4Tibble
q4master <- merge(q2Tibble, q4Tibble, by.x = "X", by.y = "CountryCode")
q4master
masterTibble <- tbl_df(q4master)
masterTibble
View(masterTibble)
tibble_fiscal <- filter(masterTibble, grep("[Ff]iscal [Yy]ear [Ee]nd(*.)June", Special.Notes))
tibble_fiscal <- grep("[Ff]iscal [Yy]ear [Ee]nd(*.)June", Special.Notes)
tibble_fiscal <- grep("[Ff]iscal [Yy]ear [Ee]nd(*.)June", masterTibble$Special.Notes)
tibble_fiscal
tibble_fiscal <- grep("[Ff]iscal [Yy]ear [Ee]nd: June", masterTibble$Special.Notes)
tibble_fiscal
len(tibble_fiscal)
length(tibble_fiscal)
tibble_fiscal <- grep("[Ff]iscal [Yy]ear [Ee]nd.* June", masterTibble$Special.Notes)
len(tibble_fiscal)
tibble_fiscal
download.packages("quantmod")
install.packages('quantmod')
library(quantmod)
amzn = getSymbols("AMZN", auto.assign = FALSE)
sampleTimes = index(amzn)
head(sampleTimes)
sampleTimes
class(sampleTimes)
library(lubridate)
year(sampleTimes)
sum(year(sampleTimes) == y("2012"))
sum(year(sampleTimes) == "2012")
sum(year(sampleTimes) == "2012" & month(sampleTimes) == "06")
sum(year(sampleTimes) == "2012" & month(sampleTimes) == "6")
sum(year(sampleTimes) == "2012" & wday(sampleTimes) == 2)
getwd()
setwd("./Coursera Files/tidyproject")
getwd()
library(dplyr)
source('C://Users/Isaac/Documents/Coursera Files/Tidy_Project2.R')
install.packages(reshape2)
install.packages("reshape2")
source('C://Users/Isaac/Documents/Coursera Files/Tidy_Project2.R')
